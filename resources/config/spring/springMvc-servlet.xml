<?xml version="1.0" encoding="UTF-8"?>  
<beans   
    xmlns="http://www.springframework.org/schema/beans"   
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:p="http://www.springframework.org/schema/p"   
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:mvc="http://www.springframework.org/schema/mvc" 
    xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
    xsi:schemaLocation="http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
	http://www.springframework.org/schema/util 
	http://www.springframework.org/schema/util/spring-util-3.1.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
    http://code.alibabatech.com/schema/dubbo 
    http://code.alibabatech.com/schema/dubbo/dubbo.xsd">  
     <!--加载配置文件，controller中的方法就可以直接使用  -->
    <!-- <util:properties id="APP_PROPERTIES" location="classpath:sys.properties" local-override="true"/> -->
    
    <!-- 消费方应用名，用于计算依赖关系，不是匹配条件，不要与提供方一样 -->
	<!-- <dubbo:application name="basic_dubbo_consumer" /> -->

	<!-- 使用zookeeper注册中心暴露服务地址 -->
	<!-- <dubbo:registry address="zookeeper://127.0.0.1:2181" /> -->
	<!-- 关闭所有服务的启动时检查：(没有提供者时报错) -->
	<!-- <dubbo:consumer check="false" /> -->
	
    <!-- 启用spring mvc 注解-->
    <context:annotation-config/>
    <!-- 开启spring aop扫描 -->
    <aop:aspectj-autoproxy/>
	<!-- MVC转换 --> 
    <mvc:annotation-driven/>
	<mvc:default-servlet-handler/>
	<!-- <dubbo:annotation package="com.frame." /> -->
	
	<!-- ①：对web包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->  
    <context:component-scan base-package="com.frame." /> 
    
    <!-- ②：启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->  
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"/>

    <!-- 转换成json对象配置 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"  
        p:ignoreDefaultModelOnRedirect="true" >  
            <property name="messageConverters">  
                <list>  
                    <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"> 
                		<property name="supportedMediaTypes">    
					        <list>    
					            <value>application/json;charset=UTF-8</value>    
					            <value>text/json;charset=UTF-8</value>    
					       </list>    
					    </property>
                	</bean>
                </list>  
            </property>  
    </bean> 
    
    <!--  ③：对模型视图名称的解析，即在模型视图名称添加前后缀 -->  
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" >  
	     <property name="prefix" value="/WEB-INF/views/"></property>  
	     <property name="suffix" value=".jsp"></property>  
	</bean> 
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">   
	  	 <!-- 该属性用来配置可上传文件的最大 byte 数 1G -->   
	     <property name="maxUploadSize"><value>10737418240</value></property> 
	</bean> 

    
    <mvc:interceptors>
	    <bean class="com.frame.system.interceptor.WebInterceptor"></bean>
        <!-- <bean class="com.frame.system.interceptor.WebInterceptor1"></bean> -->
    </mvc:interceptors>
    
    <!-- jasperreport 配置 
	<bean id="jasperReportsViewResolver" class="org.springframework.web.servlet.view.jasperreports.JasperReportsViewResolver">  
        <property name="order" value="0"></property>  
        <property name="viewClass" value="org.springframework.web.servlet.view.jasperreports.JasperReportsMultiFormatView"/>  
        <property name="prefix" value="classpath:config/report/"/>  
        <property name="suffix" value=".jrxml"/>
        <property name="viewNames" value="rpt_*" />
        <property name="jdbcDataSource" ref="dataSource"/>
        <property name="exporterParameters">
          <map>
            <entry key="net.sf.jasperreports.engine.export.JRXlsExporterParameter.IS_REMOVE_EMPTY_SPACE_BETWEEN_COLUMNS">
              <value type="java.lang.Boolean">true</value>
            </entry>
            <entry key="net.sf.jasperreports.engine.export.JRXlsExporterParameter.IS_REMOVE_EMPTY_SPACE_BETWEEN_ROWS">
              <value type="java.lang.Boolean">true</value>
            </entry>
            <entry key="net.sf.jasperreports.engine.export.JRXlsExporterParameter.IS_WHITE_PAGE_BACKGROUND">
              <value type="java.lang.Boolean">false</value>
            </entry>
          </map>
        </property>
    </bean>
    
	<import resource="classpath:config/spring/app-mail.xml"/>
	-->
	<!-- end pasperreport 配置 -->
	<!-- 静态资源访问（不拦截此目录下的东西的访问）  
    <mvc:resources location="/img/"  mapping="/img/**" /> --> 
</beans>  