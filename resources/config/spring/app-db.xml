<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
	<!-- 读取指定位置的db.properties的信息 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:config/db.properties"></property>
		<property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		scope="singleton">
		<property name="driverClassName">
			<value>${driverClass}</value>
		</property>
		<property name="url">
			<value>${jdbcUrl}</value>
		</property>
		<property name="username">
			<value>${user}</value>
		</property>
		<property name="password">
			<value>${password}</value>
		</property>
		<property name="initialSize">
			<value>3</value>
		</property>
		<property name="maxActive">
			<value>${maxActive}</value>
		</property>
	</bean>
	
	
	<!-- mybatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:config/mybatis/mybatis-config.xml"></property>
		<!-- 自动扫描Mapper,表示在com.frame目录下的任意包下的 任意目录下以Mapper.xml结尾所有文件-->
        <property name="mapperLocations" value="classpath*:com/frame/**/*Mapper.xml"></property>
		<!-- <property name="mapperLocations">
            <list>
                                               表示在com.hoo目录下的任意包下的resultmap包目录中，以-resultmap.xml或-mapper.xml结尾所有文件 （oracle和mysql扫描的配置和路径不一样，如果是公共的都扫描 这里要区分下，不然就报错 找不到对应的表、视图） 
                <value>classpath:com/hoo/framework/mybatis/mybatis-common.xml</value>
                <value>classpath:com/hoo/**/resultmap/*-mysql-resultmap.xml</value>
            </list>
        </property> -->
	</bean>
	<!-- spring与mybatis整合配置，扫描mybatis映射接口类，生成 的bean与接口名称一致（只是首字母小写） -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
	    <property name="basePackage" value="com.frame."/>  
	    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>  
	</bean> 
	 
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>
	</bean>
	<!-- end mybatis配置 -->
	
	<!-- 激活自动代理功能 ,使用aop注解时必须开启，使用springmvc是在mvc配置文件中配置，否则controller层扫描不到-->
	<aop:aspectj-autoproxy/>
	<context:component-scan base-package="com.frame.">
	    <context:exclude-filter type="regex" expression=".*.*Controller$" />
	</context:component-scan>
</beans>